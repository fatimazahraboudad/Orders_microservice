spring.application.name=order-service
#eureka.client.service-url.defaultZone: http://localhost:8761/eureka/
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always


#spring.kafka.consumer.bootstrap.servers: localhost:9092
#spring.kafka.consumer.group-id: myGroup
#spring.kafka.consumer.auto-offset-reset: earliest
#spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=*
#
#spring.kafka.producer.bootstrap.servers: localhost:9092
#spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.bootstrap-servers= localhost:9092
spring.kafka.template.default-topic= notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=  org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping= event:com.project.order_service.event.OrderPlacedEvent